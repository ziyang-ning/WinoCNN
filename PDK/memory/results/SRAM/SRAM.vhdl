--*********************************************************************
--  saed_mc : SRAM Vhdl description                                 *
--  ---------------------------------------------------------------   *
--  Filename      : /home/wenjieg/Desktop/class/WinoCNN/PDK/memory/mc_work/SRAM.vhdl                         *
--  SRAM name     : SRAM                                              *
--  Word width    : 512   bits                                        *
--  Word number   : 128                                               *
--  Adress width  : 7     bits                                        *
--  ---------------------------------------------------------------   *
--  Creation date : Fri November 22 2024                              *
--*********************************************************************

use std.textio.all;
Library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_unsigned.all;
use IEEE.std_logic_arith.all;
entity SRAM is
	port (
		A1, A2   : in  std_logic_vector( 6 downto 0 );
		O1, O2   : out std_logic_vector( 511 downto 0 );
		I1, I2   : in  std_logic_vector( 511 downto 0 );
		WEB1, WEB2 : in  std_logic;
		CSB1, CSB2 : in  std_logic;
		OEB1, OEB2 : in  std_logic;
		CE1, CE2 : in  std_logic
	);

end SRAM;

architecture SRAM_behaviour of SRAM is
begin
	mem: process
		constant numAddr: natural := 7;
		constant numWords: natural := 128;
		constant wordLength: natural := 512;

		constant nw_m: natural := numWords-1;
		constant wl_m: natural := wordLength-1;
		constant low_address: natural := 0;
		constant high_address: natural := nw_m;
		subtype word is std_logic_vector( wl_m downto 0 );
		type memory_array is
			array (natural range low_address to high_address) of word;
		variable mem: memory_array;
		variable address   : natural;
		variable data_out1 : word;
		variable data_out2 : word;

	begin
		
		

		loop

			if  ((CSB1 = '0') and (CE1= '1') and (CE1'event )  and (CE1'last_value = '0'))	then
	 			address := conv_integer( A1 );
 				if WEB1 = '0' then
             			mem( address ) := I1(wl_m downto 0);
            				elsif WEB1 = '1' then
						data_out1 := mem( address );
						if OEB1 = '0' then
							O1 <= data_out1;
						else 
							
						end if;
					else
						O1 <= "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ";
				end if;
			end if;

			if  ((CSB2 = '0') and (CE2= '1') and (CE2'event )  and (CE2'last_value = '0'))	then
				address := conv_integer( A2 );
 				if WEB2 = '0' then
             			mem( address ) := I2(wl_m downto 0);
            				elsif WEB2 = '1' then 
						data_out2 := mem( address );
						if OEB2 = '0' then
							O2 <= data_out2;
						else 
							
						end if;
					else
             				
				end if;
			end if;


			if ( OEB1 = '0') then
					O1 <= data_out1;
				else
					
			end if;

			if ( OEB2 = '0') then
				O2 <= data_out2;
				else
					O2 <= "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ";
			end if;

				wait on CE1, CE2, OEB1,OEB2;
		end loop;
	end process;

end SRAM_behaviour;